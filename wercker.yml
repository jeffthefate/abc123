box:
    # 4.4.0 is latest LTS version of node
    - id: nodesource/trusty:4.4.0
    # Looks like this is the actual executable that runs bash scripts
    # http://devcenter.wercker.com/docs/steps/internal-steps.html
    - cmd: /bin/sh

dev:
    services:
        - id: mongodb
    steps:

        - script:
            name: set env vars
            # TODO Update this for mongo
            code: |
                export NODE_ENV=development
                export SVC_REDIS_HOST=${REDIS_PORT_6379_TCP_ADDR}

        - script:
            name: npm rebuild
            code: npm rebuild
        # What does this step do?
        - internal/watch:
            code: node index.js
            reload: true

build:

    steps:

        - script:
            name: set env vars
            code: export NODE_ENV=test

        - npm-install
        # TODO Understand tape better
        - script:
            name: install test deps globally
            code: npm install -g tape xo

        - npm-test

        - script:
            name: copy files
            code: |
                cp $(which node) "$WERCKER_OUTPUT_DIR"
                cp -RL node_modules config data api index.js package.json "$WERCKER_OUTPUT_DIR"
                cp terraform/*.tf terraform/*.json "$WERCKER_OUTPUT_DIR"

deploy:

    dockerHub:
        # TODO Validate this is all setup right
        - internal/docker-scratch-push:
            username: $DOCKER_USERNAME
            password: $DOCKER_PASSWORD
            cmd: ./node ./index.js
            tag: $WERCKER_GIT_COMMIT
            ports: "3000"
            repository: jeffthefate/wercker-node-ecs-demo
            registry: https://registry.hub.docker.com

    ecs:
        # Not done yet
        - script:

            name: set ENV vars
            code: |
                export TF_VAR_iam_role_arn=arn:aws:iam::${AWS_ACCOUNT_ID}:role/ecs_role
                export TF_VAR_ecs_cluster_id=arn:aws:ecs:us-east-1:${AWS_ACCOUNT_ID}:cluster/wercker-demo

        - appnific/expandenv@0.1.3:

            input_file: movie-api-task-template.json
            output_file: movie-api-task.json

        - releasequeue/run-terraform@0.0.17:

            action: apply
            state_stor_bucket: tf_state_bucket
            state_stor_bucket_region: us-east-1
            state_stor_key: movie_api_ecs
